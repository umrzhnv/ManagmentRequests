@page "/servicerequestcs/details"
@using Microsoft.EntityFrameworkCore
@using ManagmentRequests.Components.Models
@inject IDbContextFactory<ManagmentRequests.Data.ManagmentRequestsContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Описание заявок</PageTitle>

<h1>Описание</h1>

<div>
    <h2>Заявка</h2>
    <hr />
    @if (servicerequestcs is null)
    {
        <p><em>Загрузка...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Серийный номер лифта</dt>
            <dd class="col-sm-10">@servicerequestcs.Elevator.SerialNumber</dd>
            <dt class="col-sm-2">Запчасть</dt>
            <dd class="col-sm-10">@servicerequestcs.Part.Name</dd>
            <dt class="col-sm-2">Дата поступления</dt>
            <dd class="col-sm-10">@servicerequestcs.Date</dd>
            <dt class="col-sm-2">Описание</dt>
            <dd class="col-sm-10">@servicerequestcs.Description</dd>
            <dt class="col-sm-2">Тип</dt>
            <dd class="col-sm-10">@servicerequestcs.Type</dd>
            <dt class="col-sm-2">Статус</dt>
            <dd class="col-sm-10">@servicerequestcs.Status</dd>
            <dt class="col-sm-2">Ответственный техник</dt>
            <dd class="col-sm-10">@servicerequestcs.AssignedTechnician.Fullname</dd>
            <dt class="col-sm-2">Приоритет</dt>
            <dd class="col-sm-10">@servicerequestcs.Priority</dd>
            <dt class="col-sm-2">Дата решения проблемы</dt>
            <dd class="col-sm-10">@servicerequestcs.ResolutionDate</dd>
            <dt class="col-sm-2">Заметки</dt>
            <dd class="col-sm-10">@servicerequestcs.Notes</dd>
        </dl>
        <div>
            <a href="@($"/servicerequestcs/edit?id={servicerequestcs.ID}")">Редактировать</a> |
            <a href="@($"/servicerequestcs")">Назад</a>
        </div>
    }
</div>

@code {
    private ServiceRequestcs? servicerequestcs;
    

    [SupplyParameterFromQuery]
    private int ID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        servicerequestcs = await context.ServiceRequestcss
            .Include(g=>g.Elevator)
            .Include(g=>g.Part)
            .Include(g=>g.AssignedTechnician)
        
        .FirstOrDefaultAsync(m => m.ID == ID);

        if (servicerequestcs is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
